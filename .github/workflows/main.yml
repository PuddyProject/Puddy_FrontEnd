name: deploy

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-master-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Use Node.js version 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Set environment variables
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
          REACT_APP_API_PORT: ${{ secrets.REACT_APP_API_PORT }}
          TOKEN_SECRET_KEY: ${{ secrets.TOKEN_SECRET_KEY }}
          REACT_APP_REST_API_KEY: ${{ secrets.REACT_APP_REST_API_KEY }}
        run: |
          echo "REACT_APP_API_URL=${REACT_APP_API_URL}" >> .env
          echo "REACT_APP_API_PORT=${REACT_APP_API_PORT}" >> .env
          echo "TOKEN_SECRET_KEY=${TOKEN_SECRET_KEY}" >> .env
          echo "REACT_APP_REST_API_KEY=${REACT_APP_REST_API_KEY}" >> .env
          cat .env

      - name: Build
        env:
          CI: ''
        run: yarn build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        env:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 rm s3://puddy.world --recursive
          aws s3 cp --recursive --region ap-northeast-2 ./build s3://puddy.world

      - name: Clear Cache to Cloudfront
        env:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws cloudfront create-invalidation --distribution-id E110GSPI0CHIVL --paths "/*"
